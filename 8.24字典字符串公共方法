# 字典
xingming_dict = {"name": "小明",
            "age": 25,
            "gender": True,
            "height": 1.81}
print(xingming_dict)
# 取值
print(xingming_dict["name"])
# 增加/修改
# key存在就修改键值对，key不存在就增加键值对
xingming_dict["weight"] = 75
print(xingming_dict)
xingming_dict["age"] = 24
print(xingming_dict)
# 删除
xingming_dict.pop("age")
print(xingming_dict)
# 统计键值对数量
print(len(xingming_dict))
# 合并字典
# 键重复会覆盖
shangming_dict = {"length": 15,
                  "name": "mingming"}
print(xingming_dict)
xingming_dict.update(shangming_dict)
print(xingming_dict)
# 清空字典
# xingming_dict.clear()
# print(xingming_dict)
# kkk是每次循环中，获取的键值对的key
for kkk in xingming_dict:
    print(f'{kkk} - {xingming_dict[kkk]}')
——————————————————————————————————————————————————————————————
# 1.判断空白字符（是否仅包含空白字符）
space_str = "     \t\n\r"
print(space_str.isspace())
# 2.判断字符串是否只包含数字
num_str = "1一①"
print(num_str)
# 全角数字、最常用
print(num_str.isdecimal())
# 全角数字、（1）、\u00b22
print(num_str.isdigit())
# 全角数字、汉字数字
print(num_str.isnumeric())
hello_str = "hello world"
# 1.判断是否指定字符串开始
print(hello_str.startswith("he"))
# 2.判断是否指定字符串结束
print(hello_str.endswith("ld"))
# 3.查找指定字符串（find不报错，会返回-1）
print(hello_str.find("o w"))
# 4.替换字符串（replace不会修改原有字符串内筒）
# reolace会返回一个新的字符串
print(hello_str.replace("world", "python"))
print(hello_str)
——————————————————————————————————————————————————————————————————————————

# 顺序居中对齐输出以下内容
poem = ["登鹳雀楼",
        "王之涣",
        "白日依山尽  ",
        "  黄河入海流",
        "欲穷千里目  ",
        "  更上一层楼"]
for poem_str in poem:

    poem = poem_str.strip()
    print("|%s|" % poem.center(12, " "))
——————————————————————————————————————————————————————————————————————————————
# 假设：以下内容是从网络上抓取的
# 要求：
# 1.将字符串中的空白字符全部去掉着
# 2.再使用"”作为分隔符，拼接成一个整齐的字符串
poem_str = "登鹳雀楼\t\n 王之换\t\t 白日依山尽 \n黄河入海流\t  欲穷千里目\t\n更上一层楼"
print(poem_str)
# 1拆分字符串
poem_list = poem_str.split()
print(poem_list)
# 2 合并字符串
poem_spcae = " ".join(poem_list)
print(poem_spcae)

 ————————————————————————————————————————————————————————————————————————————————
# 字符串切片
list = "0123456789"
print(len(list))
print(list[-2::])
# 倒序输出
print(list[::-1])

——————————————————————————————————————————————————————————————————————————————————
# 查找某名学生是否在名单内，使用完整for循环，if、else以及 break
students = [
    {"name": "阿土",
     "age": "18",
     "height": "181"},
    {"name": "小美",
     "age": "19",
     "height": "161"}
]
find_name = input("输入要查找学生姓名：")
for f_name in students:

    if f_name["name"] == find_name:
        print(f'{find_name}在学生名单内，具体信息为{f_name}')
        break

else:
    print(f'{find_name}不在学生名单内')
