class Person:
    def __init__(self, name, weight):

        self.name = name
        self.weight = weight
        print(f'{self.name}的初始体重为{self.weight}')

    def __str__(self):

        return f'我是{self.name}，现在的体重是{self.weight}'

    def run(self):
        self.weight -= 0.5
        print("%s通过运动，体重减少0.5公斤" % self.name)

    def eat(self):
        self.weight += 1
        print("%s因为过度饮食，体重增加1.0公斤" % self.name)


xiaoming = Person("小明", 75.0)
xiaoming.run()
xiaoming.eat()

print(xiaoming)

xiaomei = Person("小美", 45.0)
xiaomei.run()
xiaomei.eat()
xiaomei.eat()

print(xiaomei)
——————————————————————————————————————————————————————————————————————————————————
class HouseItem:

    def __init__(self, name, area):
        self.name = name
        self.area = area

    def __str__(self):

        return "%s占地%.2f "% (self.name, self.area)


class House:
    def __init__(self, house_type, area):
        self.house_type = house_type
        self.area = area

        self.free_area = area
        self.item_list = []

    def __str__(self):

        return ("户型：%s\n总面积：%.2f[剩余：%.2f]\n家具：%s"
                % (self.house_type, self.area,
                   self.free_area, self.item_list))

    def add_item(self, item):

        print("要添加 %s" % item)
        if item.area > self.free_area:
            print("%s的面积太大了，无法添加"% item.name)

            return
        self.item_list.append(item.name)
        self.free_area -= item.area


bed = HouseItem("席梦思", 4)
chest = HouseItem("衣柜", 2)
table = HouseItem("餐桌", 1)

my_house = House("一室一厅", 60)
my_house.add_item(bed)
my_house.add_item(chest)
my_house.add_item(table)
print(my_house)
