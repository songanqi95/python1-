def sum_2_number(num_a,num_b):
    """两个数字求和"""
    c = num_a + num_b
    print(f'{num_a} + {num_b} = {c}')


sum_2_number(5.25, 6.14654321)

_______________________________________________________________________
def sum_2_number(num_a,num_b):
    """两个数字求和"""
    c = num_a + num_b
# 使用返回值，告诉调用函数的结果
    return c
# return下方代码不会被执行


result = sum_2_number(5.25, 6.14654321)
print(f'和为{result}')

_______________________________________________________________________
# 嵌套函数运用
def test1():
    print("*" * 50)


def test2():
    print("=" * 50)
    test1()
    print("=" * 50)

test2()

_______________________________________________________________________
# 打印分割线,可以改变分隔符及次数、行数（封装保持不动，使用嵌套函数）
def print_line(char, times):
    """打印单行分割线

    :param char: 分隔符类型
    :param times: 分隔符次数
    """
    print(char * times)


def print_row(rows, char, times):
    """确定行数，类型及次数

    :param rows: 行数
    :param char: 类型
    :param times: 次数
    """
    i = 0
    while i < rows:
        print_line(char, times)
        i += 1


print_row(5, "-", 20)

_______________________________________________________________________

# 列表的定义
name_list = ["a", "c", "b", "d"]
# 1. 取值和取索引
print(name_list[1])
# 知道数据内容知道数据位置
print(name_list.index("b"))

print(len(name_list))
# 2. 修改
name_list[0] = "-a"
print(name_list)
# 3. 增加
temp_list = ["eee", "fff", "hhh"]
name_list.extend(temp_list)
# 加入一个数组
name_list.append("lll")
# 后加
print(name_list)
name_list.insert(1, "+++a")
# 索引位置加
print(name_list)
# 4. 删除
name_list.remove("lll")
# 删除确定值
print(name_list)
del name_list[0]
print(name_list)
name_list.pop(5)
# 删除索引位置值
print(name_list)
# name_list.clear()
# 全清空
print(name_list)
# 升序降序
name_list.sort()
print(name_list)
name_list.sort(reverse=True)
print(name_list)
name_list.reverse()
print(name_list)

_______________________________________________________________________
name_list = ["赵", "钱", "孙", bool()]
# 使用迭代遍历列表
for my_name in name_list:

    print(f'我的名字是{my_name}')
    
_______________________________________________________________________
